name: Bob the Builder

#on:
#  push:
#    branches:
#      - '*'
#  pull_request:
#    branches:
#      - '*'
on:
  pull_request_review:
    types: [submitted]
  workflow_dispatch:

jobs:
  build:
    if: github.event.review.state == 'approved' || github.event_name == 'workflow_dispatch'
    name: Build ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [aarch64, amd64]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set Build Variables
        id: vars
        run: |
          echo "dir=infix-${{ matrix.platform }}"        >> $GITHUB_OUTPUT
          echo "tgz=infix-${{ matrix.platform }}.tar.gz" >> $GITHUB_OUTPUT
      - name: Restore Cache of dl/
        uses: actions/cache@v3
        with:
          path: dl/
          key: dl-${{ matrix.platform }}-${{ hashFiles('.git/modules/buildroot/HEAD', 'configs/*', 'package/*/*.hash') }}
          restore-keys: |
            dl-${{ matrix.platform }}-
            dl-
      - name: Restore Cache of .ccache/
        uses: actions/cache@v3
        with:
          path: .buildroot-ccache/
          key: ccache-${{ matrix.board }}-os-${{ hashFiles('.git/modules/buildroot/HEAD', 'package/*/*.hash') }}
          restore-keys: |
            ccache-${{ matrix.board }}-os-
            ccache-${{ matrix.board }}-
            ccache--os-
      - name: Configure & Build
        run: |
          make ${{ matrix.platform }}_defconfig
          make
      - name: Prepare Artifact
        run: |
          cd output
          mv images ${{ steps.vars.outputs.dir }}
          tar cfz ${{ steps.vars.outputs.tgz }} ${{ steps.vars.outputs.dir }}
          ls -l
          ls -l ${{ steps.vars.outputs.dir }}
      - uses: actions/upload-artifact@v3
        with:
          path: output/${{ steps.vars.outputs.tgz }}
  release:
    if: github.repository == 'kernelkit/infix' && github.ref == 'refs/heads/main'
    name: Upload Latest Build
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
      - uses: pyTooling/Actions/releaser@main
        with:
          tag: latest
          rm: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: artifact/*
      - name: Summary
        run: |
          cat <<EOF >> $GITHUB_STEP_SUMMARY
          # Latest Build Complete! :rocket:
          
          For the public download links of these build artifacts, please see:
           <https://github.com/kernelkit/infix/releases/tag/latest>
          EOF
