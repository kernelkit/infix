#!/usr/bin/env python3

import sys
import subprocess
import json
import re
import os

def check_interface_exists(interface):
    """Check if the network interface exists"""
    try:
        result = subprocess.run(['ip', 'link', 'show', interface],
                              capture_output=True, check=True)
        return True
    except subprocess.CalledProcessError:
        return False

def parse_iw_station_dump(interface):
    """Parse iw station dump output and return JSON"""
    try:
        result = subprocess.run(['sudo', 'iw', 'dev', interface, 'station', 'dump'],
                              capture_output=True, text=True, check=True)
        output = result.stdout
    except subprocess.CalledProcessError as e:
        print(f"Error running iw command: {e}", file=sys.stderr)
        return []
    except FileNotFoundError:
        print("Error: 'iw' command not found", file=sys.stderr)
        return []

    stations = []
    current_station = {}

    for line in output.split('\n'):
        line = line.strip()

        if line.startswith('Station'):
            if current_station:
                stations.append(current_station)

            mac_match = re.search(r'Station ([a-fA-F0-9:]{17})', line)
            current_station = {
                'mac-address': mac_match.group(1) if mac_match else 'unknown',
                'tx-speed': 'unknown',
                'rx-speed': 'unknown',
                'rssi': 0,
                'connected-time': 'unknown'
            }

        elif 'tx bitrate:' in line:
            bitrate_match = re.search(r'tx bitrate:\s*(\d+\.?\d*)\s*(MBit/s|Gbit/s)', line)
            if bitrate_match:
                speed = bitrate_match.group(1)
                unit = bitrate_match.group(2)
                current_station['tx-speed'] = f"{speed} {unit.replace('Bit/s', 'bps')}"

        elif 'rx bitrate:' in line:
            bitrate_match = re.search(r'rx bitrate:\s*(\d+\.?\d*)\s*(MBit/s|Gbit/s)', line)
            if bitrate_match:
                speed = bitrate_match.group(1)
                unit = bitrate_match.group(2)
                current_station['rx-speed'] = f"{speed} {unit.replace('Bit/s', 'bps')}"

        elif 'signal:' in line and 'avg' not in line:
            signal_match = re.search(r'signal:\s*(-?\d+)', line)
            if signal_match:
                current_station['rssi'] = int(f"{signal_match.group(1)}")

        elif 'connected time:' in line:
            time_match = re.search(r'connected time:\s*(\d+\s+\w+)', line)
            if time_match:
                current_station['connected-time'] = time_match.group(1)

    if current_station:
        stations.append(current_station)

    return stations

def main():
    if len(sys.argv) != 2:
        print("Usage: python3 wifi_station_parser.py <interface>")
        print("Example: python3 wifi_station_parser.py wifi0_ap2")
        sys.exit(1)

    interface = sys.argv[1]

    if not check_interface_exists(interface):
        print(f"Error: Interface '{interface}' not found", file=sys.stderr)
        sys.exit(1)

    stations = parse_iw_station_dump(interface)
    print(json.dumps(stations, indent=2))

if __name__ == "__main__":
    main()
