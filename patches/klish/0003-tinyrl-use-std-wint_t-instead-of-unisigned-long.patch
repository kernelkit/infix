From 8b95602d5111e736854447c0c75004a45b678812 Mon Sep 17 00:00:00 2001
From: Joachim Wiberg <troglobit@gmail.com>
Date: Wed, 12 Jul 2023 10:28:32 +0200
Subject: [PATCH 3/7] tinyrl: use std wint_t instead of unisigned long
Organization: Addiva Elektronik

This allows us to use wctype.h functions like iswspace() later.

Signed-off-by: Joachim Wiberg <troglobit@gmail.com>
---
 tinyrl/tinyrl/private.h | 3 ++-
 tinyrl/tinyrl/utf8.c    | 7 ++++---
 2 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/tinyrl/tinyrl/private.h b/tinyrl/tinyrl/private.h
index 90bcff9..1a23ea7 100644
--- a/tinyrl/tinyrl/private.h
+++ b/tinyrl/tinyrl/private.h
@@ -1,4 +1,5 @@
 #include <termios.h>
+#include <wctype.h>
 
 #include <faux/faux.h>
 
@@ -8,7 +9,7 @@
 
 
 // UTF-8 functions
-ssize_t utf8_to_wchar(const char *sp, unsigned long *sym_out);
+ssize_t utf8_to_wchar(const char *sp, wint_t *sym_out);
 bool_t utf8_wchar_is_cjk(unsigned long sym);
 off_t utf8_move_left(const char *line, off_t cur_pos);
 off_t utf8_move_right(const char *line, off_t cur_pos);
diff --git a/tinyrl/tinyrl/utf8.c b/tinyrl/tinyrl/utf8.c
index daa5878..0543e48 100644
--- a/tinyrl/tinyrl/utf8.c
+++ b/tinyrl/tinyrl/utf8.c
@@ -9,6 +9,7 @@
 #include <ctype.h>
 #include <errno.h>
 #include <unistd.h>
+#include <wctype.h>
 
 #include <faux/str.h>
 
@@ -21,11 +22,11 @@
  * @param [out] sym_out Resulting wchar.
  * @return Number of bytes for current UTF-8 symbol.
  */
-ssize_t utf8_to_wchar(const char *sp, unsigned long *sym_out)
+ssize_t utf8_to_wchar(const char *sp, wint_t *sym_out)
 {
 	int i = 0;
 	int octets = 0; // Number of 0x10xxxxxx UTF-8 sequence bytes
-	unsigned long sym = 0;
+	wint_t sym = 0;
 	const unsigned char *p = (const unsigned char *)sp;
 
 	if (sym_out)
@@ -226,7 +227,7 @@ ssize_t utf8_nsyms(const char *str, size_t len)
 		return -1;
 
 	while ((pos < (str + len)) && (*pos != '\0')) {
-		unsigned long sym = 0;
+		wint_t sym = 0;
 
 		// ASCII char
 		if ((UTF8_7BIT_MASK & *pos) == 0) {
-- 
2.34.1

