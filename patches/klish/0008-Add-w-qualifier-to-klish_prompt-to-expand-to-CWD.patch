From 9f91b3969d2ba9ee6e6d1a174953dbd141ae1698 Mon Sep 17 00:00:00 2001
From: Joachim Wiberg <troglobit@gmail.com>
Date: Sat, 15 Jul 2023 19:56:00 +0200
Subject: [PATCH] Add '%w' qualifier to klish_prompt() to expand to CWD
Organization: Addiva Elektronik

Signed-off-by: Joachim Wiberg <troglobit@gmail.com>
---
 klish/ksession/ksession_parse.c |  2 ++
 plugins/klish/misc.c            | 40 ++++++++++++++++++++++++---------
 2 files changed, 32 insertions(+), 10 deletions(-)

diff --git a/klish/ksession/ksession_parse.c b/klish/ksession/ksession_parse.c
index 9f1fece..eb015fb 100644
--- a/klish/ksession/ksession_parse.c
+++ b/klish/ksession/ksession_parse.c
@@ -620,6 +620,8 @@ kexec_t *ksession_parse_for_local_exec(ksession_t *session,
 	kcontext_set_parent_pargv(context, parent_pargv);
 	// Service ACTIONs like PTYPE, CONDitions etc. doesn't need session
 	// data within context. Else it will be able to change path.
+	/* KernelKit override for %w patch to klish_prompt() */
+	kcontext_set_session(context, session);
 	kexec_add_contexts(exec, context);
 
 	faux_argv_free(argv);
diff --git a/plugins/klish/misc.c b/plugins/klish/misc.c
index 659c0df..8237002 100644
--- a/plugins/klish/misc.c
+++ b/plugins/klish/misc.c
@@ -75,21 +75,37 @@ int klish_print(kcontext_t *context)
 	return 0;
 }
 
-
-// Symbol to show current path
-int klish_pwd(kcontext_t *context)
+static char *cwd(kcontext_t *context)
 {
-	kpath_t *path = NULL;
-	kpath_levels_node_t *iter = NULL;
-	klevel_t *level = NULL;
+	kpath_levels_node_t *iter;
+	static char buf[256];
+	ksession_t *session;
+	klevel_t *level;
+	size_t len;
 
-	path = ksession_path(kcontext_session(context));
-	iter = kpath_iter(path);
+	len = sizeof(buf);
+	memset(buf, 0, len);
+
+	session = kcontext_session(context);
+	if (!session)
+		return NULL;
+
+	iter = kpath_iter(ksession_path(session));
 	while ((level = kpath_each(&iter))) {
-		printf("/%s", kentry_name(klevel_entry(level)));
+		const char *nm = kentry_name(klevel_entry(level));
+
+		strncat(buf, "/", len--);
+		strncat(buf, nm, len);
+		len -= strlen(nm);
 	}
-	printf("\n");
 
+	return buf;
+}
+
+// Symbol to show current path
+int klish_pwd(kcontext_t *context)
+{
+	printf("%s\n", cwd(context));
 	return 0;
 }
 
@@ -138,6 +154,10 @@ int klish_prompt(kcontext_t *context)
 				faux_str_free(user);
 				break;
 				}
+			// Workdir (pwd)
+			case 'w':
+				faux_str_cat(&prompt, cwd(context));
+				break;
 			}
 			is_macro = BOOL_FALSE;
 			start = pos + 1;
-- 
2.34.1

