From 6e44dc48f5d61a46d4d25730c85a964c95a4db16 Mon Sep 17 00:00:00 2001
From: Joachim Wiberg <troglobit@gmail.com>
Date: Wed, 12 Jul 2023 11:11:20 +0200
Subject: [PATCH 6/7] tinyrl: add support for Ctrl-left and Ctrl-right (move by
 word)
Organization: Addiva Elektronik

Signed-off-by: Joachim Wiberg <troglobit@gmail.com>
---
 tinyrl/tinyrl/keys.c    | 44 +++++++++++++++++++++++++++++++++++++++++
 tinyrl/tinyrl/private.h |  2 ++
 tinyrl/tinyrl/tinyrl.c  |  6 ++++++
 tinyrl/vt100.h          |  2 ++
 tinyrl/vt100/vt100.c    |  2 ++
 5 files changed, 56 insertions(+)

diff --git a/tinyrl/tinyrl/keys.c b/tinyrl/tinyrl/keys.c
index d912233..10ea6a3 100644
--- a/tinyrl/tinyrl/keys.c
+++ b/tinyrl/tinyrl/keys.c
@@ -237,6 +237,17 @@ static int is_prev_space(tinyrl_t *tinyrl)
 	return isspace(tinyrl->line.str[tinyrl->line.pos - 1]);
 }
 
+static int is_next_space(tinyrl_t *tinyrl)
+{
+	if (tinyrl->utf8) {
+		off_t new_pos = utf8_move_right(tinyrl->line.str, tinyrl->line.pos);
+
+		return iswspace(tinyrl->line.str[new_pos]);
+	}
+
+	return isspace(tinyrl->line.str[tinyrl->line.pos + 1]);
+}
+
 bool_t tinyrl_key_backword(tinyrl_t *tinyrl, unsigned char key)
 {
 	(void)key;
@@ -252,6 +263,39 @@ bool_t tinyrl_key_backword(tinyrl_t *tinyrl, unsigned char key)
 	return BOOL_TRUE;
 }
 
+bool_t tinyrl_key_left_word(tinyrl_t *tinyrl, unsigned char key)
+{
+	(void)key;
+
+	while (tinyrl->line.pos > 0 && is_prev_space(tinyrl))
+		tinyrl_key_left(tinyrl, key);
+
+	while (tinyrl->line.pos > 0 && !is_prev_space(tinyrl))
+		tinyrl_key_left(tinyrl, key);
+
+	return BOOL_TRUE;
+}
+
+bool_t tinyrl_key_right_word(tinyrl_t *tinyrl, unsigned char key)
+{
+	int adjust = 0;
+
+	(void)key;
+
+	while (tinyrl->line.pos < tinyrl->line.len && !is_next_space(tinyrl))
+		tinyrl_key_right(tinyrl, key);
+
+	while (tinyrl->line.pos < tinyrl->line.len && is_next_space(tinyrl)) {
+		adjust = 1;
+		tinyrl_key_right(tinyrl, key);
+	}
+
+	if (adjust)
+		tinyrl_key_right(tinyrl, key);
+
+	return BOOL_TRUE;
+}
+
 
 bool_t tinyrl_key_clear_screen(tinyrl_t *tinyrl, unsigned char key)
 {
diff --git a/tinyrl/tinyrl/private.h b/tinyrl/tinyrl/private.h
index 1a23ea7..370f8a6 100644
--- a/tinyrl/tinyrl/private.h
+++ b/tinyrl/tinyrl/private.h
@@ -30,6 +30,8 @@ bool_t tinyrl_key_right(tinyrl_t *tinyrl, unsigned char key);
 bool_t tinyrl_key_backspace(tinyrl_t *tinyrl, unsigned char key);
 bool_t tinyrl_key_backword(tinyrl_t *tinyrl, unsigned char key);
 bool_t tinyrl_key_delete(tinyrl_t *tinyrl, unsigned char key);
+bool_t tinyrl_key_left_word(tinyrl_t *tinyrl, unsigned char key);
+bool_t tinyrl_key_right_word(tinyrl_t *tinyrl, unsigned char key);
 bool_t tinyrl_key_clear_screen(tinyrl_t *tinyrl, unsigned char key);
 bool_t tinyrl_key_erase_line(tinyrl_t *tinyrl, unsigned char key);
 bool_t tinyrl_key_tab(tinyrl_t *tinyrl, unsigned char key);
diff --git a/tinyrl/tinyrl/tinyrl.c b/tinyrl/tinyrl/tinyrl.c
index de93b7c..2c83106 100644
--- a/tinyrl/tinyrl/tinyrl.c
+++ b/tinyrl/tinyrl/tinyrl.c
@@ -506,6 +506,12 @@ bool_t tinyrl_esc_seq(tinyrl_t *tinyrl, const char *esc_seq)
 	case VT100_CURSOR_RIGHT:
 		result = tinyrl_key_right(tinyrl, 0);
 		break;
+	case VT100_CURSOR_FDWORD:
+		result = tinyrl_key_right_word(tinyrl, 0);
+		break;
+	case VT100_CURSOR_BKWORD:
+		result = tinyrl_key_left_word(tinyrl, 0);
+		break;
 	case VT100_HOME:
 		result = tinyrl_key_start_of_line(tinyrl, 0);
 		break;
diff --git a/tinyrl/vt100.h b/tinyrl/vt100.h
index 6864bb0..7eca40e 100644
--- a/tinyrl/vt100.h
+++ b/tinyrl/vt100.h
@@ -60,6 +60,8 @@ typedef enum {
 	VT100_CURSOR_DOWN,	// Move the cursor down
 	VT100_CURSOR_LEFT,	// Move the cursor left
 	VT100_CURSOR_RIGHT,	// Move the cursor right
+	VT100_CURSOR_FDWORD,	// Move the cursor right one word
+	VT100_CURSOR_BKWORD,	// Move the cursor left one word
 	VT100_HOME,		// Move the cursor to the beginning of the line
 	VT100_END,		// Move the cursor to the end of the line
 	VT100_INSERT,		// No action at the moment
diff --git a/tinyrl/vt100/vt100.c b/tinyrl/vt100/vt100.c
index 0c4f4aa..8dbf474 100644
--- a/tinyrl/vt100/vt100.c
+++ b/tinyrl/vt100/vt100.c
@@ -32,6 +32,8 @@ static vt100_decode_t esc_map[] = {
 	{"[D", VT100_CURSOR_LEFT},
 	{"[H", VT100_HOME},
 	{"[1~", VT100_HOME},
+	{"[1;5C", VT100_CURSOR_FDWORD},
+	{"[1;5D", VT100_CURSOR_BKWORD},
 	{"[F", VT100_END},
 	{"[4~", VT100_END},
 	{"[2~", VT100_INSERT},
-- 
2.34.1

