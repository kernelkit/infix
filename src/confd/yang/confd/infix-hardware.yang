module infix-hardware {
  yang-version 1.1;
  namespace "urn:infix:hardware:ns:yang:1.0";
  prefix ih;
  import ietf-hardware {
    prefix iehw;
  }
  import iana-hardware {
    prefix iahw;
  }

  import ietf-yang-types {
    prefix yang;
  }

  organization "KernelKit";
  contact      "kernelkit@googlegroups.com";
  description  "Vital Product Data augmentation of ieee-hardware and deviations.";

  revision 2025-10-30 {
    description "Add phys-address leaf for hardware components and enable sensor support.";
    reference "internal";
  }
  revision 2024-04-25 {
    description "Spellcheck leaf: coutry-code -> country-code";
    reference "internal";
  }
  revision 2024-01-18 {
    description "Initial";
    reference "internal";
  }

  typedef country-code {
    type string {
      length 2;
      pattern "[A-Za-z]+";
    }
    description "A two-letter country code.";
  }

  identity usb {
    base iahw:hardware-class;
    description "This identity is used to describe a USB port";
  }
  identity vpd {
    base iahw:hardware-class;
    description "This identity is used to a VPD memory on the device.";
  }
  identity wifi {
    base iahw:hardware-class;
    description "This identity is used to describe a WiFi radio/PHY";
  }

  deviation "/iehw:hardware/iehw:component/iehw:state/iehw:admin-state" {
    deviate add {
      must ". = 'locked' or . = 'unlocked'" {
        error-message "Only 'locked' and 'unlocked' states are allowed here.";
      }
    }
  }

  deviation "/iehw:hardware/iehw:component/iehw:state/iehw:standby-state" {
    deviate not-supported;
  }
  deviation "/iehw:hardware/iehw:component/iehw:alias" {
    deviate not-supported;
  }
  deviation "/iehw:hardware/iehw:component/iehw:uri" {
    deviate not-supported;
  }
  deviation "/iehw:hardware/iehw:component/iehw:asset-id" {
    deviate not-supported;
  }
  augment "/iehw:hardware/iehw:component" {
    leaf phys-address {
      type yang:phys-address;
      config false;
      description
        "The physical address of the hardware component. For chassis components,
         this represents the base MAC address used for the system. This is
         typically sourced from VPD data on enterprise hardware, or derived from
         the first physical interface on single-board computers (SBCs) without
         VPD. May be used as the base for generating addresses for virtual
         interfaces. For other component types, this could represent various
         physical layer addresses (e.g., Fibre Channel WWN, InfiniBand GUID).";
    }
    container vpd-data {
      config false;
      leaf product-name {
	type string;
      }
      leaf part-number {
	type string;
      }
      leaf serial-number {
	type string;
      }
      leaf mac-address {
	type yang:mac-address;
      }
      leaf manufacture-date {
	type string;
      }
      leaf device-version {
	type uint8;
      }
      leaf label-revision {
	type string;
      }
      leaf label-version {
	type string;
      }
      leaf platform-name {
	type string;
      }
      leaf onie-version {
	type string;
      }
      leaf num-macs {
	type uint16;
      }
      leaf manufacturer {
	type string;
      }
      leaf country-code {
	type country-code;
      }
      leaf vendor {
	type string;
      }
      leaf diag-version {
	type string;
      }
      leaf service-tag {
	type string;
      }
      list vendor-extension {
	leaf iana-enterprise-number {
	  type uint32;
	}
	leaf extension-data {
	  type string;
	}
      }
    }
  }
}
