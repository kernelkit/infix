submodule infix-if-wifi {
  yang-version 1.1;
  belongs-to infix-interfaces {
    prefix infix-if;
  }
  import ietf-interfaces {
    prefix if;
  }
  import ietf-yang-types {
    prefix yang;
  }
  import ietf-netconf-acm {
    prefix nacm;
  }
  import ietf-keystore {
    prefix ks;
  }
  import infix-crypto-types {
    prefix ixct;
  }
  import infix-if-type {
    prefix infixift;
  }
  import infix-wifi-country-codes {
    prefix iwcc;
  }

  organization "KernelKit";
  contact      "kernelkit@googlegroups.com";
  description
    "WiFi-specific extensions to the standard IETF interfaces model.

     This submodule defines configuration and operational data relevant to
     WiFi radio interfaces, including security settings, network
     discovery, and regulatory compliance.

     It supports WiFi station mode and enables comprehensive management of
     wireless connections, including encryption, country codes, and scanning.";

  revision 2025-07-27 {
    description "Refactor module and add support for Accesspoint mode.";
    reference "internal";
  }
  revision 2025-05-27 {
    description "Initial revision.";
    reference "internal";
  }

  feature wifi {
    description
      "WiFi support is an optional build-time feature in Infix.";
  }

  typedef mode {
    type enumeration {
      enum station {
      }
      enum accesspoint {
      }
    }
  }
  typedef encryption {
    type enumeration {
      enum mixed-wpa2-wpa3 {
        description
          "Enables WPA2/WPA3 mixed mode encryption with automatic protocol
           negotiation. The system uses the strongest supported variant supported by Access Point.";
      }
      enum disabled {
        description
          "Disables encryption for an open network.

           WARNING: Open networks transmit data unencrypted and should only
           be used in trusted environments.";
      }
    }
    description
      "Encryption modes available for WiFi connections.

       - mixed-wpa2-wpa3: Secure connection using WPA2/WPA3 (auto-selected)
       - disabled: Open network (unencrypted)";
  }

  typedef band {
    type enumeration {
      enum "2.4GHz" {
        description "2.4 GHz frequency band.";
      }
      enum "5GHz" {
        description "5 GHz frequency band.";
      }
    }
    description "WiFi frequency bands.";
  }

  typedef channel {
    type union {
      type enumeration {
        enum "auto" {
          description "Automatic channel selection (recommended).";
        }
      }
      type uint8 {
        range "1..14 | 36 | 40 | 44 | 48 | 149 | 153 | 157 | 161 | 165";
      }
    }
    description "WiFi channel: 'auto' for automatic selection or specific channel number.";
  }

  augment "/if:interfaces/if:interface" {
    when "derived-from-or-self(if:type, 'infixift:wifi') or derived-from-or-self(if:type, 'infixift:wifi-ap')" {
      description
        "Applies to interfaces of type 'wifi' or 'wifi-ap'.";
    }
    
    description
      "WiFi interface extensions with MAC address validation for AP interfaces.";

    container wifi {
      if-feature wifi;
      presence "Configure Wi-Fi settings";

      description
        "WiFi radio configuration and operational data.";

      leaf radio {
        when "derived-from-or-self(../../if:type, 'infixift:wifi-ap')" {
          description "Only available for wifi-ap interfaces.";
        }
        type if:interface-ref;
        must "derived-from-or-self(/if:interfaces/if:interface[if:name=current()]/if:type, 'infixift:wifi')" {
          error-message "Referenced interface must be of type 'wifi'.";
        }
        mandatory true;
        description
          "Reference to the underlying WiFi radio interface.

           Example: 'wifi0' - the radio interface this AP uses.";
      }

      leaf country-code {
        type iwcc:country-code;
        default '00';
        description
          "Two-letter ISO 3166-1 country code for regulatory compliance.

           Examples: 'SE', 'US', 'DE', 'JP'.

           WARNING: Incorrect values may violate local laws.";
      }

      leaf mode {
        type mode;
        description
          "WiFi interface operating mode.
           
           - station: Connect to external WiFi networks
           - accesspoint: Operate as WiFi access point radio";
      }
      leaf band {
        type band;
        when "derived-from-or-self(../../if:type, 'infixift:wifi') and ../mode = 'accesspoint'" {
          description "Only available for wifi interfaces in accesspoint mode.";
        }
        must "not(derived-from-or-self(../../if:type, 'infixift:wifi') and ../mode = 'accesspoint') or ." {
          error-message "Band is mandatory for WiFi interfaces in accesspoint mode.";
        }
        description
          "WiFi frequency band for radio operation.

           If not specified, radio supports all available bands.";
      }

      leaf channel {
        type channel;
        default "auto";
        when "derived-from-or-self(../../if:type, 'infixift:wifi') and ../mode = 'accesspoint'" {
          description "Only available for wifi interfaces in accesspoint mode.";
        }
        must ". = 'auto' or not(../band) or " +
          "(../band = '2.4GHz' and . >= 1 and . <= 14) or " +
          "(../band = '5GHz' and (. = 36 or . = 40 or . = 44 or . = 48 or . >= 149 and . <= 165))" {
          error-message "Channel must be valid for selected band or use 'auto'.";
        }
        description
          "WiFi channel selection for radio.
           'auto' (default) - automatic channel selection
           Manual selection available for common channels.";
      }

      leaf encryption {
        default mixed-wpa2-wpa3;
        type encryption;
        when "(derived-from-or-self(../../if:type, 'infixift:wifi') and ../mode = 'station') or derived-from-or-self(../../if:type, 'infixift:wifi-ap')" {
          description "Available for wifi interfaces in station mode or wifi-ap interfaces.";
        }
        description
          "WiFi encryption method.

           For station interfaces: 
           - mixed-wpa2-wpa3 (default): Enables WPA2/WPA3 auto-negotiation
           - disabled: Disables encryption (open network)
           
           For AP interfaces:
           - mixed-wpa2-wpa3: Enables WPA2/WPA3 encryption
           - disabled: Disables encryption (open network)";
      }

      leaf ssid {
        type string {
          length "1..32";
        }
        when "(derived-from-or-self(../../if:type, 'infixift:wifi') and ../mode = 'station') or derived-from-or-self(../../if:type, 'infixift:wifi-ap')" {
          description "Available for wifi interfaces in station mode or wifi-ap interfaces.";
        }
        description
          "WiFi network name (SSID).

           For station interfaces: SSID to connect to (must match target network)
           For AP interfaces: SSID to broadcast

           Case-sensitive. Length: 1â€“32 characters.";
      }

      leaf secret {
        type ks:symmetric-key-ref;
        when "(derived-from-or-self(../../if:type, 'infixift:wifi') and ../mode = 'station') or derived-from-or-self(../../if:type, 'infixift:wifi-ap')" {
          description "Available for wifi interfaces in station mode or wifi-ap interfaces.";
        }
        must "../encryption != 'disabled'" {
           error-message
            "Pre-shared key required unless encryption is disabled.";
        }
        description
          "Pre-shared key (PSK) for WPA-secured networks.";
      }

      leaf rssi {
        config false;
        type int16;
        units "dBm";
        description
          "Current received signal strength (RSSI) in dBm for station connection.

           Lower (more negative) values indicate stronger signals.";
      }

      list scan-results {
        config false;
        key ssid;
        description
          "List of discovered networks.";

        leaf ssid {
          type string;
          description
            "SSID of the discovered network.";
        }

        leaf bssid {
          type string;
          description
            "BSSID of the discovered network.";
        }

        leaf rssi {
          type int16;
          units "dBm";
          description
            "Signal strength of the network.";
        }

        leaf channel {
          type int16;
          description
            "Channel on which the network was detected.";
        }

        leaf-list encryption {
          ordered-by user;
          type string;
          description
            "Human-readable description of the detected security.";
        }
      }

      list connected-stations {
        when "derived-from-or-self(../../../if:type, 'infixift:wifi-ap')" {
          description "Only available for wifi-ap interfaces.";
        }
        config false;
        key mac;
        description
          "List of stations currently connected to this access point.";

          leaf mac {
            type yang:phys-address;
            description
              "MAC address of connected station.";
          }

          leaf rssi {
            type int16;
            units "dBm";
            description
              "Signal strength for connected station.";
          }
        }
    }
  }
}
