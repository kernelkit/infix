module infix-dhcp-client {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:infix-dhcp-client";
  prefix dhc4-clnt;

  import ietf-interfaces {
    prefix "if";
  }

  contact      "kernelkit@googlegroups.com";
  description  "This module implements an IPv4 DHCP client";

  revision 2023-05-22 {
    description   "Initial revision.";
    reference     "rfc2131 rfc7950";
  }

  /*
   * Typedefs
   */

  typedef route-preference {
    type uint32;
    description "This type is used for route preferences (metric).";
  }

  typedef dhcp-options {
    type enumeration {
      enum subnet {
	value 1;
	description "Subnet (IP address and netmask)";
      }
      enum router {
	value 3;
	description "Default route(s)";
      }
      enum dns {
	value 6;
	description "DNS server";
      }
      enum hostname {
	value 12;
	description "Hostname";
      }
      enum domain {
	value 15;
	description "Domain name";
      }
      enum broadcast {
	value 28;
	description "Broadcast address";
      }
      enum ntpsrv {
	value 42;
	description "NTP server";
      }
      enum address {
	value 50;
	description "Requested (previously cached) address";
      }
      enum clientid {
	value 61;
	description "Client ID (default MAC, and option 12)";
      }
      enum staticroutes {
	value 121;
	description "Classless static routes";
      }
    }
    description "Supported DHCP client request options";
  }

  /*
   * Data Nodes
   */

  container dhcp-client {
    description
      "DHCPv4 client configuration";
    leaf enabled {
      type boolean;
      default "true";
      description "Globally enables the DHCP client function.";
    }
    list client-if {
      key "if-name";
      description "List of interfaces requesting DHCPv4 configuration.";
      leaf if-name {
        type if:interface-ref;
        mandatory true;
        description "Name of the interface.";
      }
      leaf enabled {
        type boolean;
        default "true";
        description "Enable DHCP client for this interface.";
      }
      leaf client-id {
	type string;
	description "Optional Client ID, option 61, default: MAC address.";
      }
      leaf arping {
        type boolean;
        default "true";
        description "ARP for lease to check for IP address collisions (slow).";
      }
      leaf-list options {
	type dhcp-options;
	description
	  "DHCP options to request (and accept).  The default is an empty list,
           meaning all supported options.  To restrict the client to only get
           IP address and default route, set this to: 'subnet router'";
      }
      leaf route-preference {
	type route-preference;
	default 100;
	description
	  "The metric any route is installed with, both option 33 and 121.
           The default (100) is based on a plain Ethernet interface, the
           interface type determines this, e.g. a WiFi interface would be
           metric 500.";
      }
    }
  }
}
